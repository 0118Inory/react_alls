{"ast":null,"code":"// 引入Count的UI组件\nimport CountUI from \"../../components/Count\";\nimport { createIncrementAction, createDecrementAction, createIncrementAsyncAction } from \"../../redux/count_action\"; // 引入store\n// import store from '../../redux/store'\n// 引用connect用于连接UI组件与redux\n\nimport { connect } from \"react-redux\"; // mapStateToProps函数返回的是一个对象：\n// 返回的对象中的KEY就作为传递给UI组件props的key,value就作为爨地给UI组件props的value---状态\n// mapStateToProps用于传递状态\n// 映射状态\n// const mapStateToProps=\n// mapDispatchToProps函数返回的是一个对象：\n// 返回的对象中的KEY就作为传递给UI组件props的key,value就作为爨地给UI组件props的value---状态\n// mapDispatchToProps用于传递状态\n// 映射操作状态的方法\n// const mapDispatchToProps=\n//使用connect()()创建并暴露一个Count的容器组件\n\nexport default connect(state => ({\n  count: state\n}), //   mapDispatchToProps的一般写法\n//   (dispatch) => ({\n//     jia: (number) =>\n//       // 通知redux执行加法\n//       dispatch(createIncrementAction(number)),\n//     jian: (number) => dispatch(createDecrementAction(number)),\n//     jiaAsync: (number, time) =>\n//       dispatch(createIncrementAsyncAction(number, time)),\n//   })\n// mapDispatchToProps的简写\n{\n  jia: createIncrementAction,\n  jian: createDecrementAction,\n  jiaAsync: createIncrementAsyncAction\n})(CountUI);","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/redux_test/src/containers/Count/index.jsx"],"names":["CountUI","createIncrementAction","createDecrementAction","createIncrementAsyncAction","connect","state","count","jia","jian","jiaAsync"],"mappings":"AAAA;AACA,OAAOA,OAAP,MAAoB,wBAApB;AACA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,0BAHF,QAIO,0BAJP,C,CAKA;AACA;AACA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,eAAeA,OAAO,CACnBC,KAAD,KAAY;AAAEC,EAAAA,KAAK,EAAED;AAAT,CAAZ,CADoB,EAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIE,EAAAA,GAAG,EAACN,qBADR;AAEIO,EAAAA,IAAI,EAACN,qBAFT;AAGIO,EAAAA,QAAQ,EAACN;AAHb,CAZsB,CAAP,CAiBbH,OAjBa,CAAf","sourcesContent":["// 引入Count的UI组件\r\nimport CountUI from \"../../components/Count\";\r\nimport {\r\n  createIncrementAction,\r\n  createDecrementAction,\r\n  createIncrementAsyncAction,\r\n} from \"../../redux/count_action\";\r\n// 引入store\r\n// import store from '../../redux/store'\r\n// 引用connect用于连接UI组件与redux\r\nimport { connect } from \"react-redux\";\r\n// mapStateToProps函数返回的是一个对象：\r\n// 返回的对象中的KEY就作为传递给UI组件props的key,value就作为爨地给UI组件props的value---状态\r\n// mapStateToProps用于传递状态\r\n// 映射状态\r\n// const mapStateToProps=\r\n// mapDispatchToProps函数返回的是一个对象：\r\n// 返回的对象中的KEY就作为传递给UI组件props的key,value就作为爨地给UI组件props的value---状态\r\n// mapDispatchToProps用于传递状态\r\n// 映射操作状态的方法\r\n// const mapDispatchToProps=\r\n\r\n//使用connect()()创建并暴露一个Count的容器组件\r\nexport default connect(\r\n  (state) => ({ count: state }),\r\n//   mapDispatchToProps的一般写法\r\n//   (dispatch) => ({\r\n//     jia: (number) =>\r\n//       // 通知redux执行加法\r\n//       dispatch(createIncrementAction(number)),\r\n//     jian: (number) => dispatch(createDecrementAction(number)),\r\n//     jiaAsync: (number, time) =>\r\n//       dispatch(createIncrementAsyncAction(number, time)),\r\n//   })\r\n// mapDispatchToProps的简写\r\n{\r\n    jia:createIncrementAction,\r\n    jian:createDecrementAction,\r\n    jiaAsync:createIncrementAsyncAction\r\n}\r\n)(CountUI);\r\n"]},"metadata":{},"sourceType":"module"}