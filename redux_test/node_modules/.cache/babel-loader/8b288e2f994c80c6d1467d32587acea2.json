{"ast":null,"code":"/*\r\n 1. 该文件是用于创建一个为Count组件服务的reducer，reducer的本质就是一个函数\\\r\n 2. reducer函数会接受到两个参数，分别为：之前的状态（preState）,动作对象（action）\r\n*/\nconst initState = 0;\nexport default function countReducer() {\n  let preState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (preState === undefined) preState = 0; // 重action对象中获取：type，data\n\n  const {\n    type,\n    data\n  } = action; // 根据type决定如何加工数据\n\n  switch (type) {\n    case 'increment':\n      //如果是加\n      return preState + data;\n\n    case 'decrement':\n      //如果是减\n      return preState - data;\n\n    default:\n      return preState;\n  }\n}","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/redux_test/src/redux/count_reducer.js"],"names":["initState","countReducer","preState","action","undefined","type","data"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,SAAS,GAAG,CAAlB;AACA,eAAe,SAASC,YAAT,GAAgD;AAAA,MAA1BC,QAA0B,uEAAjBF,SAAiB;AAAA,MAAPG,MAAO;AAC3D,MAAGD,QAAQ,KAAGE,SAAd,EAAwBF,QAAQ,GAAC,CAAT,CADmC,CAE3D;;AACJ,QAAM;AAACG,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAYH,MAAlB,CAH+D,CAI/D;;AACA,UAAQE,IAAR;AACI,SAAK,WAAL;AAAiB;AACd,aAAOH,QAAQ,GAACI,IAAhB;;AACH,SAAK,WAAL;AAAiB;AACd,aAAOJ,QAAQ,GAACI,IAAhB;;AAEH;AACI,aAAOJ,QAAP;AAPR;AASC","sourcesContent":["/*\r\n 1. 该文件是用于创建一个为Count组件服务的reducer，reducer的本质就是一个函数\\\r\n 2. reducer函数会接受到两个参数，分别为：之前的状态（preState）,动作对象（action）\r\n*/ \r\nconst initState = 0\r\nexport default function countReducer(preState=initState,action){\r\n    if(preState===undefined)preState=0\r\n    // 重action对象中获取：type，data\r\nconst {type,data}=action\r\n// 根据type决定如何加工数据\r\nswitch (type) {\r\n    case 'increment'://如果是加\r\n       return preState+data\r\n    case 'decrement'://如果是减\r\n       return preState-data\r\n\r\n    default:\r\n        return preState;\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}