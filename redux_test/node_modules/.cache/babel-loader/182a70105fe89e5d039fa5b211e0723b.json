{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\redux_test\\\\src\\\\containers\\\\Count\\\\index.jsx\";\n// 引入Count的UI组件\nimport CountUI from \"../../components/Count\";\nimport { createIncrementAction, createDecrementAction, createIncrementAsyncAction } from \"../../redux/count_action\"; // 引入store\n// import store from '../../redux/store'\n// 引用connect用于连接UI组件与redux\n\nimport { connect } from \"react-redux\"; // mapStateToProps函数返回的是一个对象：\n// 返回的对象中的KEY就作为传递给UI组件props的key,value就作为爨地给UI组件props的value---状态\n// mapStateToProps用于传递状态\n// 映射状态\n// const mapStateToProps=\n// mapDispatchToProps函数返回的是一个对象：\n// 返回的对象中的KEY就作为传递给UI组件props的key,value就作为爨地给UI组件props的value---状态\n// mapDispatchToProps用于传递状态\n// 映射操作状态的方法\n// const mapDispatchToProps=\n//使用connect()()创建并暴露一个Count的容器组件\n\nimport React, { Component } from 'react'; // 引入store ，用于获取redux中保存状态\n// import store from '../../redux/store'\n// 移入actionCreator，专门创建action对象\n// import {createIncrementAction,createDecrementAction,createIncrementAsyncAction} from '../../redux/count_action'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Count extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      count: 0\n    };\n\n    this.increment = () => {\n      const {\n        value\n      } = this.selectNumber;\n      this.props.jia(value * 1); // 通知redux加value\n      // store.dispatch({type:'increment',data:value*1})\n      // 通过count_action封装引入新的方法\n      // store.dispatch(createIncrementAction(value*1))\n      // const{count}=this.state\n      // this.setState({count:count+value*1})\n    };\n\n    this.decrement = () => {\n      const {\n        value\n      } = this.selectNumber;\n      this.props.jian(value * 1); // const{count}=this.state\n      // this.setState({count:count-value*1})\n      // store.dispatch({type:'decrement',data:value*1})\n      // store.dispatch(createDecrementAction(value*1))\n    };\n\n    this.incrementIfOdd = () => {\n      const {\n        value\n      } = this.selectNumber; // const count=store.getState()\n\n      if (this.props.count % 2 !== 0) {\n        this.props.jia(value * 1); // store.dispatch({type:'increment',data:value*1})\n        // store.dispatch(createIncrementAction(value*1))\n      }\n    };\n\n    this.incrementAsync = () => {\n      const {\n        value\n      } = this.selectNumber; // const{count}=this.state\n\n      setTimeout(() => {\n        this.props.jiaAsync(value * 1, 500); // store.dispatch({type:'increment',data:value*1})\n        // store.dispatch(createIncrementAsyncAction(value*1),500)\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\\uFF1A\", this.props.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ref: c => this.selectNumber = c,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.decrement,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.incrementIfOdd,\n        children: \"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\\u57FA\\u6570\\u5728\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.incrementAsync,\n        children: \"\\u5F02\\u6B65\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), \"\\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({\n  count: state\n}), //   mapDispatchToProps的一般写法\n//   (dispatch) => ({\n//     jia: (number) =>\n//       // 通知redux执行加法\n//       dispatch(createIncrementAction(number)),\n//     jian: (number) => dispatch(createDecrementAction(number)),\n//     jiaAsync: (number, time) =>\n//       dispatch(createIncrementAsyncAction(number, time)),\n//   })\n// mapDispatchToProps的简写\n{\n  jia: createIncrementAction,\n  jian: createDecrementAction,\n  jiaAsync: createIncrementAsyncAction\n})(Count);","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/redux_test/src/containers/Count/index.jsx"],"names":["CountUI","createIncrementAction","createDecrementAction","createIncrementAsyncAction","connect","React","Component","Count","state","count","increment","value","selectNumber","props","jia","decrement","jian","incrementIfOdd","incrementAsync","setTimeout","jiaAsync","render","c"],"mappings":"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","sourcesContent":["// 引入Count的UI组件\r\nimport CountUI from \"../../components/Count\";\r\nimport {\r\n  createIncrementAction,\r\n  createDecrementAction,\r\n  createIncrementAsyncAction,\r\n} from \"../../redux/count_action\";\r\n// 引入store\r\n// import store from '../../redux/store'\r\n// 引用connect用于连接UI组件与redux\r\nimport { connect } from \"react-redux\";\r\n// mapStateToProps函数返回的是一个对象：\r\n// 返回的对象中的KEY就作为传递给UI组件props的key,value就作为爨地给UI组件props的value---状态\r\n// mapStateToProps用于传递状态\r\n// 映射状态\r\n// const mapStateToProps=\r\n// mapDispatchToProps函数返回的是一个对象：\r\n// 返回的对象中的KEY就作为传递给UI组件props的key,value就作为爨地给UI组件props的value---状态\r\n// mapDispatchToProps用于传递状态\r\n// 映射操作状态的方法\r\n// const mapDispatchToProps=\r\n\r\n//使用connect()()创建并暴露一个Count的容器组件\r\nimport React, { Component } from 'react'\r\n// 引入store ，用于获取redux中保存状态\r\n// import store from '../../redux/store'\r\n// 移入actionCreator，专门创建action对象\r\n// import {createIncrementAction,createDecrementAction,createIncrementAsyncAction} from '../../redux/count_action'\r\n class Count extends Component {\r\n    state={count:0}\r\n    // componentDidMount(){\r\n    //     // 检测redux中状态的变化，只要变化，就调用render\r\n    //     store.subscribe(()=>{\r\n    //     this.setState({})\r\n\r\n    //     })\r\n    // }\r\n//   加法\r\n    increment=()=>{\r\n        const{value}=this.selectNumber\r\n        this.props.jia(value*1)\r\n        // 通知redux加value\r\n        // store.dispatch({type:'increment',data:value*1})\r\n        // 通过count_action封装引入新的方法\r\n        // store.dispatch(createIncrementAction(value*1))\r\n        // const{count}=this.state\r\n        // this.setState({count:count+value*1})\r\n    }\r\n    // 减法\r\n    decrement=()=>{\r\n        const{value}=this.selectNumber\r\n        this.props.jian(value*1)\r\n\r\n        // const{count}=this.state\r\n        // this.setState({count:count-value*1})\r\n        // store.dispatch({type:'decrement',data:value*1})\r\n        // store.dispatch(createDecrementAction(value*1))\r\n\r\n\r\n    }\r\n    // 基数再加\r\n    incrementIfOdd=()=>{\r\n        const{value}=this.selectNumber\r\n        // const count=store.getState()\r\n        if (this.props.count % 2 !==0) {\r\n        this.props.jia(value*1)\r\n\r\n            // store.dispatch({type:'increment',data:value*1})\r\n        // store.dispatch(createIncrementAction(value*1))\r\n\r\n\r\n            \r\n        }\r\n    }\r\n    // 异步加\r\n    incrementAsync=()=>{\r\n        const{value}=this.selectNumber\r\n        // const{count}=this.state\r\n        setTimeout(()=>{\r\n        this.props.jiaAsync(value*1,500)\r\n\r\n            // store.dispatch({type:'increment',data:value*1})\r\n        // store.dispatch(createIncrementAsyncAction(value*1),500)\r\n        })\r\n    }\r\n  render() {\r\n    return (\r\n      <div>\r\n          <h1>当前求和为：{this.props.count}</h1>\r\n          <select ref={c=>this.selectNumber=c}>\r\n              <option value=\"1\">1</option>\r\n              <option value=\"2\">2</option>\r\n              <option value=\"3\">3</option>\r\n          </select>&nbsp;&nbsp;\r\n          <button onClick={this.increment}>+</button>&nbsp;\r\n          <button onClick={this.decrement}>-</button>&nbsp;\r\n          <button onClick={this.incrementIfOdd}>当前求和为基数在加</button>&nbsp;\r\n          <button onClick={this.incrementAsync}>异步加</button>&nbsp;\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({ count: state }),\r\n//   mapDispatchToProps的一般写法\r\n//   (dispatch) => ({\r\n//     jia: (number) =>\r\n//       // 通知redux执行加法\r\n//       dispatch(createIncrementAction(number)),\r\n//     jian: (number) => dispatch(createDecrementAction(number)),\r\n//     jiaAsync: (number, time) =>\r\n//       dispatch(createIncrementAsyncAction(number, time)),\r\n//   })\r\n// mapDispatchToProps的简写\r\n{\r\n    jia:createIncrementAction,\r\n    jian:createDecrementAction,\r\n    jiaAsync:createIncrementAsyncAction\r\n}\r\n)(Count);\r\n"]},"metadata":{},"sourceType":"module"}